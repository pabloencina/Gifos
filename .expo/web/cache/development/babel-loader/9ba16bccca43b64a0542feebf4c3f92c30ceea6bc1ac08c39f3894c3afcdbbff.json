{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport theme from \"../../Styles/Theme/theme\";\nimport useApi from \"../Hooks/useApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Trending = function Trending(_ref) {\n  var fontRoboto = _ref.fontRoboto,\n    fontMontserrat = _ref.fontMontserrat;\n  var url = `https://api.giphy.com/v1/gifs/trending?api_key=Tj8JKaeKhEJjgbgXJ4V3SDC7647ujluy&limit=10`;\n  var _useApi = useApi(url),\n    loading = _useApi.loading,\n    data = _useApi.data;\n  console.log(data);\n  if (data === null) {\n    return null;\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.containerTrending,\n      children: _jsx(Text, {\n        style: [styles.title, {\n          fontFamily: fontRoboto\n        }],\n        children: \"Trending:\"\n      })\n    })\n  });\n};\nexport default Trending;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 15\n  },\n  containerTrending: {\n    height: 70,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    color: theme.color.primary,\n    fontSize: theme.fontSizes.title,\n    fontWeight: theme.fontWeights.bold\n  },\n  textContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    padding: 15\n  },\n  textWrapper: {\n    marginRight: 10\n  },\n  text: {\n    color: theme.color.blackColor,\n    fontSize: theme.fontSizes.text\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","TouchableOpacity","View","theme","useApi","jsx","_jsx","Trending","_ref","fontRoboto","fontMontserrat","url","_useApi","loading","data","console","log","style","styles","container","children","containerTrending","title","fontFamily","create","flex","backgroundColor","padding","height","justifyContent","alignItems","color","primary","fontSize","fontSizes","fontWeight","fontWeights","bold","textContainer","flexDirection","flexWrap","textWrapper","marginRight","text","blackColor"],"sources":["/home/pablo/Escritorio/WebsiteProjects/AwesomeProject/Gifos/src/Components/Home-Inicio/Trending.jsx"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport theme from \"../../Styles/Theme/theme\";\nimport useApi from \"../Hooks/useApi\";\n\nconst Trending = ({ fontRoboto, fontMontserrat }) => {\n  const url = `https://api.giphy.com/v1/gifs/trending?api_key=Tj8JKaeKhEJjgbgXJ4V3SDC7647ujluy&limit=10`;\n  const { loading, data } = useApi(url);\n  console.log(data);\n  if (data === null) {\n    return null; // O puedes mostrar un mensaje de carga, por ejemplo\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.containerTrending}>\n        <Text style={[styles.title, { fontFamily: fontRoboto }]}>\n          Trending:\n        </Text>\n      </View>\n      {/* <View style={styles.textContainer}>\n        {data.map((trend, index) => {\n          return (\n            <TouchableOpacity\n              key={trend.id}\n              style={styles.textWrapper}\n              onPress={() => {\n                console.log(`Clic en el elemento ${trend.title}`);\n              }}\n            >\n              <Text style={[styles.text, { fontFamily: fontMontserrat }]}>\n                {index !== data.length - 1\n                  ? trend.title + \", \"\n                  : trend.title + \". \"}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </View> */}\n    </View>\n  );\n};\n\nexport default Trending;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 15,\n  },\n  containerTrending: {\n    height: 70,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    color: theme.color.primary,\n    fontSize: theme.fontSizes.title,\n    fontWeight: theme.fontWeights.bold,\n  },\n  textContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    padding: 15,\n  },\n  textWrapper: {\n    marginRight: 10,\n  },\n  text: {\n    color: theme.color.blackColor,\n    fontSize: theme.fontSizes.text,\n    //marginTop: 20,\n    //padding: 10,\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,KAAK;AACZ,OAAOC,MAAM;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAErC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAuC;EAAA,IAAjCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,cAAc,GAAAF,IAAA,CAAdE,cAAc;EAC5C,IAAMC,GAAG,GAAI,0FAAyF;EACtG,IAAAC,OAAA,GAA0BR,MAAM,CAACO,GAAG,CAAC;IAA7BE,OAAO,GAAAD,OAAA,CAAPC,OAAO;IAAEC,IAAI,GAAAF,OAAA,CAAJE,IAAI;EACrBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO,IAAI;EACb;EACA,OACER,IAAA,CAACJ,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5Bd,IAAA,CAACJ,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACG,iBAAkB;MAAAD,QAAA,EACpCd,IAAA,CAACN,IAAI;QAACiB,KAAK,EAAE,CAACC,MAAM,CAACI,KAAK,EAAE;UAAEC,UAAU,EAAEd;QAAW,CAAC,CAAE;QAAAW,QAAA,EAAC;MAEzD,CAAM;IAAC,CACH;EAAC,CAoBH,CAAC;AAEX,CAAC;AAED,eAAeb,QAAQ;AAEvB,IAAMW,MAAM,GAAGnB,UAAU,CAACyB,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE;EACX,CAAC;EACDN,iBAAiB,EAAE;IACjBO,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDR,KAAK,EAAE;IACLS,KAAK,EAAE5B,KAAK,CAAC4B,KAAK,CAACC,OAAO;IAC1BC,QAAQ,EAAE9B,KAAK,CAAC+B,SAAS,CAACZ,KAAK;IAC/Ba,UAAU,EAAEhC,KAAK,CAACiC,WAAW,CAACC;EAChC,CAAC;EACDC,aAAa,EAAE;IACbC,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBV,UAAU,EAAE,QAAQ;IACpBH,OAAO,EAAE;EACX,CAAC;EACDc,WAAW,EAAE;IACXC,WAAW,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;IACJZ,KAAK,EAAE5B,KAAK,CAAC4B,KAAK,CAACa,UAAU;IAC7BX,QAAQ,EAAE9B,KAAK,CAAC+B,SAAS,CAACS;EAG5B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}